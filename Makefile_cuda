### Laptop ###
CXX = mpic++
CPPFLAGS = -I../HighFive/include
CXXFLAGS = -std=c++17 -Werror -DHIGHFIVE_PARALLEL_HDF5=ON -O3 #-g -Og # -O3 -pg 
LDFLAGS  = #-pg
LDLIBS   = -lmpi -lm -lhdf5

### Workstation ###
# CXX = mpic++
# CPPFLAGS = -I../HighFive/include -I/usr/include/hdf5/openmpi
# CXXFLAGS = -std=c++17 -Wall -Werror -DHIGHFIVE_PARALLEL_HDF5=ON -g -Og # -O3 -pg 
# LDFLAGS  = -L/usr/lib/x86_64-linux-gnu/hdf5/openmpi #-pg
# LDLIBS   = -lmpi -lm -lhdf5

### Pleiades - Intel compiler & HPE MPI ###
# CXX = icpc
# CPPFLAGS = -I../HighFive/include 
# CXXFLAGS = -std=c++17 -Wall -Werror -DHIGHFIVE_PARALLEL_HDF5=ON -O3 -xAVX
# LDFLAGS  =
# LDLIBS   = -lstdc++fs -lmpi++ -lmpi -lm -lhdf5 

### Stellar - Intel compiler & Intel MPI ###
# CXX = icpc
# CPPFLAGS = -I../HighFive/include 
# CXXFLAGS = -std=c++17 -Werror -DHIGHFIVE_PARALLEL_HDF5=ON -O3 -xCORE-AVX512
# LDFLAGS  =
# LDLIBS   = -lstdc++fs -lmpi -lm -lhdf5 

USE_CUDA = 0

CUDA_ARCH  = sm_70
CUDA_FLAGS = -dc


SRC := main.cpp \
	   process.cpp element_block.cpp face_communicator.cpp \
	   write_data.cpp write_file_utils.cpp write_screen.cpp \
       lagrange_polynomials.cpp legendre_roots.cpp matrix.cpp \
	   geometry.cpp edge.cpp transfinite_map.cpp \
	   params.cpp \
	   params_cartesian.cpp initial_state_cartesian.cpp \
	   params_torus.cpp initial_state_torus.cpp cerfon_freidberg.cpp desc.cpp \
	   rk2_midpoint.cpp rk3_ssp.cpp 


ifeq ($(USE_CUDA),0)
SRC += kernels.cpp
endif


BUILD_DIR := ./build

OBJ := $(SRC:%.cpp=$(BUILD_DIR)/%.o)
DEP := $(SRC:%.cpp=$(BUILD_DIR)/%.d)


ifeq ($(USE_CUDA),1)
SRC_CUDA := kernels.cu
OBJ_CUDA := $(SRC_CUDA:%.cu=$(BUILD_DIR)/%.cu.o)

CUDA_LINKED_OBJ := $(BUILD_DIR)/cuda_linked.cu.o

$(OBJ)    += $(CUDA_LINKED_OBJ)
$(LDLIBS) += -lcudart
endif


##################################################
all: $(BUILD_DIR) persephone

$(BUILD_DIR):
	@mkdir -p $@



### Linking ######################################
persephone: $(OBJ)
	$(CXX) $(LDFLAGS) $^ $(LDLIBS) -o $@


$(CUDA_LINKED_OBJ): $(OBJ_CUDA)
	nvcc -arch=$(CUDA_ARCH) -dlink $^ -o $@



### Compiling ####################################
-include $(DEP)
DEPFLAGS = -MT $@ -MMD -MP -MF $(BUILD_DIR)/$*.d

$(BUILD_DIR)/%.o : %.cpp
	$(CXX) $(DEPFLAGS) $(CPPFLAGS) $(CXXFLAGS) -c $< -o $@


$(BUILD_DIR)/%.cu.o : %.cu
	nvcc -arch=$(CUDA_ARCH) $(CUDA_FLAGS) $< -o $@



### Cleaning up ##################################
clean:
	rm -f persephone
	rm -r $(BUILD_DIR)


### Dependency management based on ideas from:
### http://scottmcpeak.com/autodepend/autodepend.html
### http://make.mad-scientist.net/papers/advanced-auto-dependency-generation/
